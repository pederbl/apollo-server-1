
type AccountContent {
  name: String!
  phone: String
}

type Account {
  id: ID!
  content: AccountContent!
}

input AccountContentInput {
  name: String!
  phone: String
}

input AccountContentPatchInput {
  name: String
  phone: String
}

input AccountCreateInput {
  content: AccountContentInput!
}

input AccountReplaceInput {
  id: ID!
  content: AccountContentInput!
}

input AccountPatchInput {
  id: ID!
  content: AccountContentPatchInput!
}

input AccountDeleteInput {
  id: ID!
}

type AccountsListResponse {
  code: String!
  message: String!
  records: [Account]
}

input AccountsListInput {
  name: String
}

type AccountsGetByIdResponse {
  success: [Account]
  error: [ErrorResponse]
}

type Mutation {
  accountsCreate(records: [AccountCreateInput]!): RecordsMutationResponse
  accountsPatch(records: [AccountPatchInput]!): RecordsMutationResponse
  accountsReplace(records: [AccountReplaceInput]!): RecordsMutationResponse
  accountsDelete(records: [AccountDeleteInput]!): RecordsMutationResponse
}

type Query {
  accountsList(query: AccountsListInput): AccountsListResponse
  accountsGetById(ids: [ID!]!): AccountsGetByIdResponse
}
