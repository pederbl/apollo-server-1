
type AccountContent {
  name: String!
  phone: String
}

type Account {
  id: ID!
  content: AccountContent!
}

input AccountContentInput {
  name: String!
  phone: String
}

input AccountContentPatchInput {
  name: String
  phone: String
}

input AccountReplaceInput {
  id: ID!
  content: AccountContentInput!
}

input AccountPatchInput {
  id: ID!
  content: AccountContentPatchInput!
}

type AccountsResponse {
  records: [Account]!
  errors: [ErrorResponse]!
}

type AccountsDeleteResponse {
  deletedIds: [ID]!
  errors: [ErrorResponse]!
}

type AccountsListResponse {
  code: Int
  message: String!
  records: [Account]
}

input AccountListFiltersInput {
  name: String
}

input AccountsListInput {
  filters: AccountListFiltersInput
}

type Mutation {
  accountsCreate(contents: [AccountContentInput]!): AccountsResponse
  accountsPatch(records: [AccountPatchInput]!): AccountsResponse
  accountsReplace(records: [AccountReplaceInput]!): AccountsResponse
  accountsDelete(ids: [ID]!): AccountsDeleteResponse
}

type Query {
  accountsGetByIds(ids: [ID!]!): AccountsResponse
  accountsList(query: AccountsListInput): AccountsListResponse
}
